# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
PS1='\[\033[01;34m\]\w\[\033[00m\]`hg prompt " [{branch}{status}{update}] " 2>/dev/null``__git_ps1`\n${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]\$ '

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
alias ls='ls -G'
alias grep='grep --color'
alias fgrep='fgrep --color'
alias egrep='egrep --color'
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi


# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
source ~/.hg_bash_completion

venwrap=`type -P virtualenvwrapper_bashrc`
if [ "$venwrap" != "" ]; then
    source $venwrap
fi
PATH=$PATH:/var/lib/gems/1.9.1/gems/haml-3.0.4/bin
PATH=$PATH:/usr/local/sbin/
PATH=$PATH:/usr/local/bin
PATH=$PATH:/usr/local/Cellar/python2.6/2.6.6/bin
PATH=$PATH:~/.virtualenvs/prw
PATH=$PATH:~/.gem/ruby/1.8/bin
export PATH
export MAXOSX_DEPLOYMENT_TARGET=10.6
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/Cellar/python2.6/2.6.6/bin/virtualenvwrapper.sh
source ~/.virtualenvs/git-helpers
source ~/.virtualenvs/qa-helpers
source ~/z/z.sh
alias vi="bash -lc mvim"


function qt() {
	TESTS="$@"
	if [[ -z $TESTS ]]; then
	    TESTS=`find apps -maxdepth 1 -type d -not -name apps | sed -e "s/^apps\///"`
	fi
	./manage.py test --settings=test_settings $TESTS
}

function pgrep() {
	ps aux | grep $1 | grep -v grep
}

function pkill() {
	local pid
	pid=$(ps ax | grep $1 | grep -v grep | awk '{ print $1 }')
	kill -9 $pid
	echo -n 'Killed ' $1 '(process ' $pid ')'
}
